/*
Posicionamiento en CSS

Las propiedades FLOAT y POSITION nos permiten modificar la posicion 
natural de cualquier elemento del documento HTML.

EL navegador coloca cada elemento teniedo en cuenta el orden en el que
aparece en el documento y su tipo de visualizacion dependiendo de linea o de
bloque.

con FLOAT y POSITION podemos modificar este comportamiento.

Elementos Flotantes
	-float: Convierte un elemento en flotante desplazandolo hasta la zona mas a la
	izquierda o mas a la derecha de la posicion en la que originalmente se encontraba.
	-clear: limpia la floatcion (left, right,both)


Tipos de Posicionamiento:
	-static (default)
	-relative
	-absolute
	-fixed
	-sticky


Para mover los elementos posicionados se activan las propiedades:
	-top (vertical - eje Y)
	-bottom (vertical - eje Y)
	-left (horizontal - eje X)
	-right (horizontal - eje X)
	-z-index (profundidad - eje z)


Las propiedades top y left van a tener preferencia por sobre bottom
right respectivamente.


Estas 5 propiedades no funcionan con el valor de static.	


*/


/*Static: Es el valor por defecto, significa que el elemento respeta el flujo del 
documento HTML, por lo que no se puede mover ni posicionar*/

.static{
	background-color: yellow;
	position: static;
	top: 10px;
	left:10px;
}

/*relative: El elemento conserva sus dimensiones y posicion original en el flujo del 
documento. Si se mueve toma como referencia su posicion original*/

.relative{
	background-color: turquoise;
	position: relative;
	width: 300px;
	height: 50px;
	/*top: 50px;
	left:50px;
	*/
	bottom: 50px;
	right: 50px;
	top: -30px;
	left: -10px;
	top: 200px;
	left: 50px;
	z-index: 3;
}


/*absolute: 
El elemento pierde sus dimensiones y posicion original en el flujo del documento
. si se mueve puede tomar como referencia 2 elementos:
		1) El primer ancestro con posicionamiento relativo
		2) Si no encuentra un ancestro relativo, se mueve respecto del documento
		HTML.
*/

.absolute{
	background-color: tomato;
	position: absolute;
	width: 200px;
	height: 50px;
	/*top: 0;
	left: 0;*/
	/*top: 100px;
	left: 100px;*/
	right: 0;
	bottom: 0;

}

.relative-parent{
	background-color: khaki;
	position: relative;
	width: 600px;
	height: 50px;
}


.absolute-child{
	background-color: lightcoral;
	position: absolute;
	left: 0;
	top: 0;
}


/*fixed: El elemento pierde sus dimensiones y posicion original en el flujo del
documento. Si se mueve toma como referencia el documento HTML y queda fijo en la
posicion, cuando el scroll se mueva, el elemento no lo hara, queda FIJO
*/

.fixed{
	background-color: lightgreen;
	position: fixed;
	width: 300px;
	height: 100px;
	/*right: 20px;
	bottom: 10px;*/
	top: 30px;
	left: 400px;
}


/*sticky: Es una combinacion de posicionamiento relative y fixed, para este 
posicionamiento las propiedades de top, left, bottom y right no mueven el elemento,
sirven como un punto de referencia, mientras no lleguen a este valor el elemento
se comporta como un relative, cuando llega se convierte en fixed

Para que este comportamiento funcione el elemento sticky debe ser hijo directo del
body o su elemento contenedor debe tener dimensiones definidas y solo sera sticky
dentro de las dimensiones de su contenedor padre.

*/

.sticky{
	background-color: lightskyblue;
	position: sticky;
	top: 50px;
	
}

/*z-index: Propiedad que permite controlar la profundidad de los elementos 
posicionados, su valor por defecto es auto, acepta numeros positivos, negativos 
y cero

A mayor valor el elemento esta mas al frente, a menor valor mas al fondo.

Un elemento padre nunca podra estar sobre sus elementos hijos, sin embargo los 
elementos hijos si pueden dandoles un valor negativo
*/


.z-index-1,
.z-index-2{
	background-color: mediumaquamarine;
	border: thin solid black;
	position: relative;
	width: 200px;
	height: 200px;
}


.z-index-1{
z-index: 1;
}


.z-index-2{
top:-200px;
left: 100px;
}